generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id             String        @id @default(uuid())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  email          String        @unique
  name           String
  hashedPassword String?
  authToken      String?
  emailVerified  Boolean       @default(false)
  quizes         Quiz[]
  auth_session   UserSession[]
}

model UserSession {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Quiz {
  id                 String         @id @default(uuid())
  title              String
  userId             String
  user               User           @relation(fields: [userId], references: [id])
  score              Int            @default(0)
  isCompleted        Boolean        @default(false)
  startedTimestamp   DateTime       @default(now())
  completedTimestamp DateTime?
  quizQuestions      QuizQuestion[]
}

model Question {
  id                    String         @id @default(uuid())
  family                String
  title                 String
  prompt                String
  type                  String
  multipleChoiceOptions String
  answers               String
  tags                  String
  quizQuestions         QuizQuestion[]
}

model QuizQuestion {
  quizId            String
  questionId        String
  answer            String?
  isAnswered        Boolean   @default(false)
  isCorrect         Boolean?
  askedTimestamp    DateTime?
  answeredTimestamp DateTime?
  quiz              Quiz      @relation(fields: [quizId], references: [id])
  question          Question  @relation(fields: [questionId], references: [id])

  @@id([quizId, questionId])
}

model LearningResources {
  id                                 Int                                  @id @default(autoincrement())
  title                              String                               @unique
  type                               String
  url                                String                               @unique
  imageUrl                           String?
  description                        String?
  LearningEngagementEvents           LearningEngagementEvents[]
  LearningEngagementEventsAggregated LearningEngagementEventsAggregated[]
}

model LearningEngagementEvents {
  id                   Int               @id @default(autoincrement())
  learningResourceId   Int
  learningResourceType String
  date                 DateTime
  learningResource     LearningResources @relation(fields: [learningResourceId], references: [id])
}

model LearningEngagementEventsAggregated {
  id                   Int               @id @default(autoincrement())
  learningResourceType String
  learningResourceId   Int
  date                 DateTime
  count                Int               @default(0)
  learningResource     LearningResources @relation(fields: [learningResourceId], references: [id])
}
